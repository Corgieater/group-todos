enum Status {
  UNFINISHED
  FINISHED
  ARCHIVED
}

enum AssignmentStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model Task {
  id      Int  @id @default(autoincrement())
  ownerId Int
  owner   User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  title       String
  status      Status  @default(UNFINISHED)
  priority    Int     @default(3)
  description String?
  location    String?

  // 時間欄位（關鍵）
  // 1) 一般事件/截止時間 -> 存 UTC
  dueAtUtc        DateTime? // 以 UTC 儲存的絕對時間點（nullable）
  // 2) All-day 事件 -> 用當地的「日期」表示
  allDay          Boolean   @default(false)
  allDayLocalDate DateTime? @db.Date // 僅日期；若 allDay=true，則這欄必有值
  // 3) 來源時區（輸入時的時區），IANA
  sourceTimeZone  String?   @db.VarChar(64)

  assignees TaskAssignee[]

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  @@index([ownerId, status, priority])
  @@index([dueAtUtc])
  @@index([allDay, allDayLocalDate])
}

model TaskAssignee {
  taskId Int
  userId Int

  assignedAt DateTime         @default(now())
  status     AssignmentStatus @default(PENDING)

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)

  user User @relation("AssigneeUser", fields: [userId], references: [id])

  assignedById Int?
  assignedBy   User? @relation("AssignerUser", fields: [assignedById], references: [id])

  @@id([taskId, userId])
  @@index([userId, status])
  @@index([assignedAt])
}
