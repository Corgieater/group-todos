//- views/groups/details.pug
//- locals:
//- group: { id, name, createdAtLabel, updatedAtLabel }
//- owner: { id, name, email }
//- members: [{ user: { id, name, email }, role, joinedAtLabel }]
//- currentUserId: number
//- isOwner: boolean
//- isAdmin: boolean
//- canManageMembers: boolean
//- success?: string, error?: string, csrfToken?: string

doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    - const pageTitle = 'Group • ' + (group && group.name ? group.name : 'Details')
    title= pageTitle
    include ../partials/bootstrap
  body
    include ../partials/message

    nav.navbar.navbar-light.bg-light
      .container
        a.navbar-brand(href="/tasks/home") Task Board
        a.btn.btn-outline-secondary.btn-sm(href="/groups") Back to Groups

    .container.py-4
      if success
        .alert.alert-success(role="alert")= success
      if error
        .alert.alert-danger(role="alert")= error

      // Header
      .d-flex.justify-content-between.align-items-center.mb-3
        h1.h4.mb-0
          i.bi.bi-people-fill.me-2
          = group && group.name ? group.name : 'Details'
        if isOwner
          a.btn.btn-outline-primary.btn-sm(href=`/groups/${group.id}/edit`)
            i.bi.bi-pencil-square.me-1
            | Edit

      // Info + Actions
      .row.g-3.mb-4
        .col-12.col-lg-6
          .card.shadow-sm
            .card-body
              h2.h6.text-muted.mb-3 Group Info
              dl.row.mb-0
                dt.col-4 Name
                dd.col-8= group && group.name
                dt.col-4 Owner
                dd.col-8
                  i.bi.bi-person-circle.me-1
                  = owner && owner.name ? owner.name : '—'
                  if owner && owner.email
                    span.text-muted.ms-2 &lt;#{owner.email}&gt;
                dt.col-4 Created
                dd.col-8= group.createdAtLabel || group.createdAt
                dt.col-4 Updated
                dd.col-8= group.updatedAtLabel || group.updatedAt

        .col-12.col-lg-6
          .card.shadow-sm
            .card-body
              h2.h6.text-muted.mb-3 Quick Actions
              .d-grid.gap-2
                if isOwner
                  form(action=`/api/groups/${group.id}/regenerate-invite`, method="POST")
                    input(type="hidden" name="_csrf" value=csrfToken) 
                    button.btn.btn-outline-secondary(type="submit")
                      i.bi.bi-arrow-clockwise.me-1
                      | Regenerate Invite Link
                  form(action=`/api/groups/${group.id}/disband`, method="POST", onsubmit="return confirm('Delete this group? This cannot be undone.');")
                    input(type="hidden" name="_csrf" value=csrfToken) 
                    button.btn.btn-outline-danger(type="submit")
                      i.bi.bi-trash3.me-1
                      | Delete Group
                else
                  form(action=`/api/groups/${group.id}/leave`, method="POST", onsubmit="return confirm('Leave this group?');")
                    input(type="hidden" name="_csrf" value=csrfToken) 
                    button.btn.btn-outline-danger(type="submit")
                      i.bi.bi-box-arrow-right.me-1
                      | Leave Group

      // Members header
      .d-flex.justify-content-between.align-items-center.mb-2
        h2.h5.mb-0 Members
        if isOwner || isAdmin
          a.btn.btn-sm.btn-primary(href=`/groups/${group.id}/invitation`)
            i.bi.bi-person-plus.me-1
            | Invite

      // Members table (responsive)
      if !members || members.length === 0
        .text-center.text-muted.py-4
          i.bi.bi-people.me-2
          | No members yet.
      else
        .table-responsive
          table.table.table-hover.align-middle
            thead
              tr
                th(scope="col") Name
                th(scope="col") Email
                th(scope="col") Role
                th(scope="col") Joined
                if isOwner
                  th(scope="col") Change Role
                if canManageMembers
                  th.text-end(scope="col") Actions
            tbody
              each m in members
                - const hasUser = !!(m && m.user)
                - const rowUserId = hasUser ? m.user.id : undefined
                - const isSelf = !!(currentUserId && rowUserId && currentUserId === rowUserId)
                - const targetIsOwner = m && m.role === 'OWNER'
                - const viewerIsOwner = !!isOwner
                - const viewerIsAdmin = !!isAdmin
                //- 計算是否可顯示 Remove
                - let canRemove = false
                - if (canManageMembers && !isSelf && !targetIsOwner) {
                -   if (viewerIsOwner) canRemove = true
                -   else if (viewerIsAdmin && m.role === 'MEMBER') canRemove = true
                - }
                //- 計算是否可「變更角色」：只有 Owner、且不能動 Owner 或自己
                - const canChangeRole = isOwner && !isSelf && !targetIsOwner

                tr
                  td= hasUser && m.user.name ? m.user.name : '—'
                  td= hasUser && m.user.email ? m.user.email : '—'
                  td
                    span.badge.bg-secondary= m.role
                  td= m.joinedAtLabel || m.joinedAt

                  if isOwner
                    td
                      if canChangeRole
                        form.d-flex.gap-2(
                          action=`/api/groups/${group.id}/update/role`
                          method="POST"
                        )
                          if csrfToken
                            input(type="hidden" name="_csrf" value=csrfToken)
                          input(type="hidden" name="memberId" value=(hasUser ? m.user.id : ''))
                          select.form-select.form-select-sm(name="newRole" required)
                            option(value="MEMBER" selected=(m.role === 'MEMBER')) Member
                            option(value="ADMIN"  selected=(m.role === 'ADMIN')) Admin
                          button.btn.btn-sm.btn-outline-primary(type="submit")
                            i.bi.bi-arrow-repeat.me-1
                            | Update
                      else
                        span.text-muted.small
                          if isSelf
                            | You cannot change your own role
                          else if targetIsOwner
                            | Owners cannot be changed
                          else
                            | Not allowed

                  if canManageMembers
                    td.text-end
                      if canRemove
                        form.d-inline(
                          action=`/api/groups/${group.id}/kick-out-members`
                          method="POST"
                          onsubmit="return confirm('Remove this member?');"
                        )
                          if csrfToken
                            input(type="hidden" name="_csrf" value=csrfToken)
                          input(type="hidden" name="memberId" value=(hasUser ? m.user.id : ''))
                          button.btn.btn-sm.btn-outline-danger(type="submit")
                            i.bi.bi-person-dash.me-1
                            | Remove
                      else
                        //- 保持乾淨，不顯示按鈕

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous")
